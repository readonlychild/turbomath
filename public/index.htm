<html>
<head>
<title>Turbo Math</title>
  <meta name="viewport" content="user-scalable=no, width=device-width" />
	<link rel="stylesheet" href="minified/jquery-ui.min.css" />
	<script type="text/javascript" src="jquery-1.8.2.min.js"></script>
	<script type="text/javascript" src="jquery-ui-1.8.24.min.js"></script>
	<script type="text/javascript" src="turbomath.js"></script>
	<script type="text/javascript" src="turbomath.session.difficulty.methods.js"></script>
</head>
<style>
  body { font-family:'arial narrow',arial; font-size:20pt; }
  #canvas { width:300px; height:460px; margin:0 auto; background:#abd url('img/bg.png') no-repeat; padding:10px; }
  .operation { font-size:24pt; font-weight:bold; border:1px solid #ccf; background-color:#cdf; padding:12px; margin:5px; }
  .number    { display:inline-block; width:80px; text-align:right; }
  .operator  { clear:right; display:inline-block; width:40px; }
  .number2   { border-bottom:3px solid #000; }
  .answer-options div,
  #goodOnes, #badOnes, #skips
	{ font-size:15pt; font-weight:bold; border:1px solid #ccf; background-color:#cdf; padding:12px; margin:5px; text-align:center; cursor:pointer; width:64px; }
  .answer-options div:hover { border:1px solid #666; }
  .face { display:inline-block; width:128px; height:120px; float:left; margin-left:-20px; }
  .face-good { background:url('img/math-good-128.png') no-repeat 0px -10px; }
  .face-bad  { background:url('img/math-bad-128.png') no-repeat 0px -10px; }
  .face-idle { background:url('img/math-idle-128.png') no-repeat 0px -10px; }
  .actionlink   { display:inline-block; padding:2px 5px; cursor:pointer; font-size:16pt; background-color:#569; color:#fff; }
  .actionlink-1 { background-color:#009; color:#fff; }
  .actionlink-2 { background-color:#f72; color:#fff; }
  .sel { background-color:#cfc !important; }
  .bad { background-color:#fbb !important; }
  #timerContainer { background-color:#ccc; width:300px; height:12px; margin:10px auto 3px; }
  #timer { height:12px; background-color:#244484; width:0px; }
  #playing { display:none; }
  .playing-topdiv { text-align:right; font-size:13pt; color:#fff; }
  #endscreen { display:none; }
  .outcomecell { display:inline-block; font-size:15pt; font-weight:bold; border:1px solid #ccc; background-color:#ddd; padding:6px; margin:5px; text-align:center; cursor:pointer; width:64px; }
  .note { font-size:12pt; }
  .operationToggle { width:30px; text-align:center; background:#888; }
  .operationToggle.selected { background:#f50; }
</style>
<body>
<div id="canvas" class="ui-corner-all">


<div id="menu">
<br/>
<br/>
<center>
	<strong style="font-size:16pt;">Solve the most problems before time runs out!!</strong><br/>
</center>
<br/>
	<span class="ui-corner-all actionlink actionlink-1" id="action-supereasy">Super Easy</span>
	<span class="note"></span>
	<br/>
	<span class="ui-corner-all actionlink actionlink-1" id="action-easy">Easy</span>
	<span class="note"></span>
	<br/>
	<span class="ui-corner-all actionlink actionlink-1" id="action-normal">Normal</span>
	<span class="note"></span>
	<br/>
	<span class="ui-corner-all actionlink actionlink-1" id="action-hard">Hard</span>
	<span class="note"></span>
	<br/><br/>

	<span style="font-size:13pt;">Toggle the operations you want to practice:</span>
	<div style="text-align:right;">
		<span class="ui-corner-all actionlink operationToggle selected">+</span>
		<span class="ui-corner-all actionlink operationToggle selected">-</span>
		<span class="ui-corner-all actionlink operationToggle selected">*</span>
		<span class="ui-corner-all actionlink operationToggle selected">/</span>
	</div>


</div><!-- #menu -->

<div id="playing">

	<div class="playing-topdiv">
	<span class="levelName"></span> <span class="sessionSeconds"></span>
	</div>

	<div id="timerContainer">
		<div id="timer"></div> 
	</div>


<div class="operation ui-corner-all">
	<span class="face face-idle" id="mood-face"></span>
	<span class="number" id="number1"> x </span> <span class="operator" id="operator"> ? </span>
	<br/>
	<span class="number number2" id="number2"> y </span>
	<span class="skip actionlink actionlink-1 ui-corner-all" id="action-skip">Skip</span>
</div>
<br/>
<div class="answer-options"></div>
<br/>
	<span class="ui-corner-all sel" id="goodOnes"> :) </span>
	<span class="ui-corner-all bad" id="badOnes"> :( </span>
	<span class="ui-corner-all" id="skips"> :| </span>
	
	<br/><br/>
	<span class="ui-corner-all actionlink actionlink-1" id="action-end">End Session</span>
	
</div><!-- #playing -->

<div id="endscreen">
	<br/>
	<h3>Session Over</h3>
	Your Score:<br/>
	<div class="ui-corner-all outcomecell sel">Good: <br/> <span id="outcome-good"> :) </span> </div>
	<div class="ui-corner-all outcomecell bad">Bad:  <br/> <span id="outcome-bad"> :(</span> </div>
	<div class="ui-corner-all outcomecell">Skips:    <br/> <span id="outcome-skips"> :| </span> </div>
	<div style="font-size:14pt;">
		Played Level: <span class="levelName" style="font-weight:bold;"></span>. <br/>
		Played for <span class="sessionSeconds" style="font-weight:bold;"></span> seconds.<br/>
		Practiced: <span class="sessionOperations"></span>
	</div>
	<br/>
	<span class="ui-corner-all actionlink actionlink-2" id="action-playagain">Play Again</span>
	<span class="ui-corner-all actionlink" id="action-gotoMenu">Go to Menu</span>
	<br/>
</div>

</div><!-- #canvas -->

<script type="text/javascript">
	



	//sp: agregar funcion shuffle a arrays de js para revolver sus elementos
	Array.prototype.shuffle = function () {
		var len = this.length;
		var i = len;
		while (i--) {
			var p = parseInt(Math.random()*i);
			var t = this[i];
			this[i] = this[p];
			this[p] = t;
		}
	};
	
	var _op = turbomath.getRandomOperation();

	
	$(document).ready(function () {
		turbomath.getRandomOperation();
		
		$(".possibleAnswer").live("click", function () {
			var $this = $(this);
			$("#mood-face").removeClass("face-good").removeClass("face-idle").removeClass("face-bad");
			$("#mood-face").addClass($this.data("face"));
			if ($("#mood-face").hasClass("face-good")) {
				$this.addClass("sel");
				if (!$this.hasClass("clicked")) {
					turbomath.session.goodOnes += 1;
					turbomath.session.seconds -= 0.10;
					pulseGood();
				}
				$("#action-skip").text("Next");
				turbomath.getRandomOperation();
			} else {
				$this.addClass("bad");
				if (!$this.hasClass("clicked")) turbomath.session.badOnes += 1;
				pulseBad();
			}
			$this.addClass("clicked");
			showGameState();
		});
		
		$("#action-end").on("click", function () {
			turbomath.session.seconds = -1;
			showMenu();
		});
		
		$("#action-skip").on("click", function () {
			$("#mood-face").removeClass("face-good").removeClass("face-idle").removeClass("face-bad");
			$("#mood-face").addClass("face-idle");
			if ($(this).text()=="Skip") turbomath.session.skips += 1;
			turbomath.getRandomOperation();
		});
		
		$("#action-start").on("click", function () {
			startGame();
			$("#levelName").text(turbomath.session.difficulty.level);
		});
		
		$("#action-supereasy").on("click", function () {
			turbomath.session.difficulty.setToSuperEasy();
			startGame();
		});
		$("#action-easy").on("click", function () {
			turbomath.session.difficulty.setToEasy();
			startGame();
		});
		$("#action-normal").on("click", function () {
			turbomath.session.difficulty.setToNormal();
			startGame();
		});
		$("#action-hard").on("click", function () {
			turbomath.session.difficulty.setToHard();
			startGame();
		});
		
		$("#action-playagain").on("click", function () {
			startGame();
		});
		
		$("#action-gotoMenu").on("click", function () {
			showMenu();
		});

		$(".operationToggle").on("click", function () {
			$(this).toggleClass("selected");
		});
		
	});
	
	function showMenu() {
		$("#menu").show();
		$("#endscreen").hide();
		$("#playing").hide();
	}
	function startGame() {
		$("#menu").hide();
		$("#endscreen").hide();
		$("#playing").show();
		turbomath.session.goodOnes = 0;
		turbomath.session.badOnes = 0;
		turbomath.session.skips = 0;
		turbomath.session.seconds = 0;
		turbomath.session.difficulty.getSelectedOperations();
		$(".levelName").text(turbomath.session.difficulty.level);
		$(".sessionSeconds").text(turbomath.session.totalSeconds);
		$(".sessionOperations").text(turbomath.session.availableOperations.join(','));
		turbomath.getRandomOperation();
		startTimer();
	}
	function endGame() {
		$("#menu").hide();
		$("#endscreen").show();
		$("#playing").hide();
		$("#outcome-good").text(turbomath.session.goodOnes);
		$("#outcome-bad").text(turbomath.session.badOnes);
		$("#outcome-skips").text(turbomath.session.skips);
		
	}
	
	function showOperation(op) {
		$("#number1").text(op.n1);
		$("#number2").text(op.n2);
		$("#operator").text(op.op);
		var htm = "";
		op.options.shuffle();
		for (var i = 0, z = op.options.length; i < z; i++) {
			var dataFace = 'face-bad';
			if (op.options[i] == op.answer) dataFace = 'face-good';
			htm += "<div class='number ui-corner-all possibleAnswer' data-face='" + dataFace + "'>" + op.options[i] + "</div>";
		}	
		htm += "";
		$(".answer-options").html(htm);
		$("#action-skip").text("Skip");
		showGameState();
	}
	function showGameState() {
		$("#goodOnes").text(turbomath.session.goodOnes);
		$("#badOnes").text(turbomath.session.badOnes);
		$("#skips").text(turbomath.session.skips);
	}

	function pulseGood() {
		var startColor = $(".operation").css('background-color');
		$(".operation")
			.css({'background-color':'#77cc77'})
			.animate({'background-color':startColor}, 600, function () {
			
			});
	}
	function pulseBad() {
		var startColor = $(".operation").css('background-color');
		$(".operation")
			.css({'background-color':'#dd9944'})
			.animate({'background-color':startColor}, 600, function () {
			
			});
	}
	
</script>

</body>
</html>